{"version":3,"sources":["components/Container/Container.module.css","features/Player/Player.module.css","features/Board/Board.module.css","features/Game/StartGameLinks.module.css","components/Link/Link.module.css","components/Link/Link.tsx","features/Game/StartGameLinks.tsx","components/Container/Container.tsx","screens/LandingScreen.tsx","config/index.ts","features/Game/GameOver.tsx","components/Card/Card.tsx","features/Game/DiscardPile.tsx","features/Board/Board.tsx","services/cards-client.ts","services/http-client-base.ts","features/Game/gameSlice.ts","features/Player/Player.tsx","components/Loader/Loader.tsx","features/Game/Game.tsx","screens/GameScreen.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Link","className","rest","styles","link","GameLinks","history","useHistory","handleRedirect","e","param","location","pathname","preventDefault","push","heading","onClick","to","Container","as","Tag","flex","width","direction","tall","centered","cn","container","LandingScreen","playersNames","0","1","2","3","cardValuesLookup","card","parseInt","GameOver","winner","players","reduce","prev","current","score","name","Card","image","suit","value","onCardPick","disable","disabled","CardFace","src","alt","DiscardPile","discard","map","player","code","Board","playerCount","children","getBoardVariant","variant","board","twoPlayer","threePlayer","fourPlayer","Error","cardsAPI","fetchNewDeck","instance","get","baseURL","_initializeResponseInterceptor","interceptors","response","use","_handleResponse","_handleError","data","error","Promise","reject","this","axios","create","initialState","status","isGameOver","startGame","createAsyncThunk","count","a","getState","cards","gameSlice","createSlice","reducers","setPlayedHand","state","payload","length","id","hand","filter","prevCard","turnToPlay","setRoundWinner","extraReducers","builder","addCase","pending","fulfilled","deck","i","playerIndex","dealCards","selectGameState","game","actions","Player","dispatch","useDispatch","useState","pickedCardIndex","setPickedCardIndex","isUser","useEffect","Math","floor","random","undefined","nameClassName","handClassName","userHand","npcHand","cardClassName","userCard","npcCard","cardIndex","Loader","Game","isReloaded","useSelector","dis","cardValue","acc","cur","scoreSum","determineRoundWinner","timer","setTimeout","clearTimeout","content","isError","renderPlayers","GameScreen","num","match","params","URLSearchParams","search","invalidPlayerCount","replace","NotFoundScreen","App","path","component","exact","store","configureStore","reducer","gameReducer","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e92e57cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\",\"narrow\":\"Container_narrow__382JJ\",\"regular\":\"Container_regular__2e5B9\",\"tall\":\"Container_tall__2bclv\",\"flex\":\"Container_flex__25deY\",\"centered\":\"Container_centered__2yI3R\",\"column\":\"Container_column__1dKFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hand\":\"Player_hand__1P5YQ\",\"npcHand\":\"Player_npcHand__36PSG\",\"userHand\":\"Player_userHand__35MuX\",\"card\":\"Player_card__12WYS\",\"userCard\":\"Player_userCard__3KB1Q\",\"npcCard\":\"Player_npcCard__23vEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__1-Hp0\",\"fadeIn\":\"Board_fadeIn__nU0hZ\",\"threePlayer\":\"Board_threePlayer__34vKQ\",\"twoPlayer\":\"Board_twoPlayer__3WazD\",\"fourPlayer\":\"Board_fourPlayer__3gg5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"StartGameLinks_heading__HN4Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__3euZY\"};","import React from \"react\";\nimport styles from \"./Link.module.css\";\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from \"react-router-dom\";\n\nexport function Link({ className = \"\", ...rest }: RouterLinkProps) {\n  className = `${styles.link} ${className}`;\n  return <RouterLink className={className} {...rest} />;\n}\n","import React, { MouseEvent } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styles from \"./StartGameLinks.module.css\";\nimport { Link } from \"components/Link/Link\";\n\nexport function GameLinks() {\n  const history = useHistory();\n\n  const handleRedirect = (e: MouseEvent<HTMLAnchorElement>, param: string) => {\n    if (param === history.location.pathname) {\n      e.preventDefault();\n      history.push(`${param}?reload=true`);\n    }\n  };\n\n  return (\n    <>\n      <h1 className={styles.heading}>Select number of players</h1>\n      <Link onClick={(e) => handleRedirect(e, \"/game/2\")} to=\"/game/2\">\n        2\n      </Link>\n      <Link onClick={(e) => handleRedirect(e, \"/game/3\")} to=\"/game/3\">\n        3\n      </Link>\n      <Link onClick={(e) => handleRedirect(e, \"/game/4\")} to=\"/game/4\">\n        4\n      </Link>\n    </>\n  );\n}\n","import React from \"react\";\nimport styles from \"./Container.module.css\";\nimport cn from \"classnames\";\n\nexport interface ContainerProps<As extends React.ElementType = React.ElementType> {\n  as?: As;\n  tall?: boolean;\n  flex?: boolean;\n  centered?: boolean;\n  className?: string;\n  width?: \"wide\" | \"regular\" | \"narrow\";\n  direction?: \"row\" | \"column\";\n}\n\nexport function Container({\n  as: Tag = \"div\",\n  className = \"\",\n  flex,\n  width = \"regular\",\n  direction = \"row\",\n  tall,\n  centered,\n  ...rest\n}: React.PropsWithChildren<ContainerProps>) {\n  className = cn(\n    styles.container,\n    styles[width],\n    styles[direction],\n    {\n      [styles.flex]: flex,\n      [styles.centered]: centered,\n      [styles.tall]: tall,\n    },\n    className\n  );\n\n  return <Tag {...{ ...rest, className }} />;\n}\n","import React from \"react\";\nimport { GameLinks } from \"features/Game/StartGameLinks\";\nimport { Container } from \"components/Container/Container\";\n\nexport function LandingScreen() {\n  return (\n    <Container width=\"narrow\" tall flex centered direction=\"column\">\n      <GameLinks />\n    </Container>\n  );\n}\n","import { CardDiscard, CardType, PlayerType } from \"model\";\n\n/**\n * Names mapped to the key, user is always key: 0\n */\nexport const playersNames: {\n  [key: number]: string;\n} = {\n  0: \"You\",\n  1: \"Mr 2\",\n  2: \"Mister 3\",\n  3: \"Mister 4\",\n};\n\n/**\n * Number of cards per game\n */\nexport const cardsCount: number = 10;\n\nexport const cardValuesLookup = (card: CardType[\"value\"]) => {\n  switch (card) {\n    case \"KING\":\n      return 14;\n    case \"QUEEN\":\n      return 13;\n    case \"JACK\":\n      return 12;\n    case \"ACE\":\n      return 1;\n    default:\n      return parseInt(card);\n  }\n};\n\nexport const MIN_PLAYER_COUNT = 2;\nexport const MAX_PLAYER_COUNT = 4;\n/**\n * helper fn to check if number of players is valid\n */\nexport const isInPlayerCountRange = (num: number) => num >= MIN_PLAYER_COUNT && num <= MAX_PLAYER_COUNT;\n\n/**\n * Simple algorithm: who had the highest||same card last takes the lead\n * @param discard played cards during the round\n * @returns round winner\n */\nexport const determineRoundWinner = (discard: CardDiscard[]) => {\n  const formattedDiscard = discard.map((dis) => ({\n    ...dis,\n    cardValue: cardValuesLookup(dis.card.value),\n  }));\n\n  return formattedDiscard.reduce(\n    (acc, cur) => {\n      if (acc.cardValue <= cur.cardValue) {\n        acc.id = cur.player.id;\n        acc.cardValue = cur.cardValue;\n      }\n      acc.scoreSum += cur.cardValue;\n      return acc;\n    },\n    { id: 0, scoreSum: 0, cardValue: 0 }\n  );\n};\n\n/**\n * Simulates real life deal where each player gets dealt one card per draw.\n * Perhaps unnecessary because cards are already shuffled but I thought it was nice to implement,\n * and using remainder (%) operator makes me feel cool. (also we can use the same deck always)\n * @param deck fresh deck of cards\n * @param count number of players\n * @returns Array of players\n */\nexport function dealCards(deck: CardType[], count: number): PlayerType[] {\n  const players: PlayerType[] = [];\n\n  for (let i = 0; i < deck.length; i++) {\n    const playerIndex = i % count;\n    const card = deck[i];\n    if (!players[playerIndex]) {\n      players[playerIndex] = {\n        id: playerIndex,\n        name: playersNames[playerIndex],\n        hand: [card],\n        turnToPlay: false,\n        score: 0,\n      };\n    } else {\n      players[playerIndex].hand.push(card);\n    }\n  }\n  return players;\n}\n","import React from \"react\";\nimport { PlayerType } from \"model\";\nimport { GameLinks } from \"./StartGameLinks\";\nimport { Container } from \"components/Container/Container\";\n\nexport function GameOver({ players }: { players: PlayerType[] }) {\n  const winner = players.reduce((prev, current) => (prev.score > current.score ? prev : current));\n  return (\n    <Container flex direction=\"column\">\n      <h3 className=\"text-white\">{winner.name} Won! Play again?</h3>\n      <GameLinks />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { CardType } from \"model\";\n\nexport interface CardProps extends CardType {\n  className?: string;\n  cardIndex: number;\n  onCardPick: () => void;\n  disable?: boolean;\n}\n\nexport function Card({ className, image, suit, value, onCardPick, disable }: CardProps) {\n  return (\n    <button className={className} onClick={onCardPick} disabled={disable}>\n      <CardFace src={image} alt={`${suit} ${value}`} />\n    </button>\n  );\n}\n\nexport interface CardFaceProps {\n  className?: string;\n  src: string;\n  alt?: string;\n}\n\nexport function CardFace({ alt = \"\", ...rest }: CardFaceProps) {\n  return <img width=\"100px\" alt={alt} {...rest} />;\n}\n","import React from \"react\";\nimport { CardDiscard } from \"model\";\nimport { CardFace } from \"components/Card/Card\";\n\nexport interface DiscardPileProps {\n  discard: CardDiscard[];\n}\n\nexport function DiscardPile({ discard }: DiscardPileProps) {\n  return (\n    <section>\n      <h4 className=\"text-info text-center pb-2\">Discard pile:</h4>\n      <ul className=\"flex\">\n        {discard.map(({ player, card }) => (\n          <li key={card.code}>\n            <CardFace src={card.image} />\n            <h5 className=\"text-white\">{player.name}</h5>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n","import React from \"react\";\nimport styles from \"./Board.module.css\";\n\nexport function Board({ playerCount, children }: React.PropsWithChildren<{ playerCount: number }>) {\n  const getBoardVariant = (variant: string) => <div className={`${styles.board} ${variant}`}>{children}</div>;\n  switch (playerCount) {\n    case 2:\n      return getBoardVariant(styles.twoPlayer);\n    case 3:\n      return getBoardVariant(styles.threePlayer);\n    case 4:\n      return getBoardVariant(styles.fourPlayer);\n    default:\n      throw new Error(\"Invalid number of players\");\n  }\n}\n","import { HttpClient } from \"./http-client-base\";\nimport { NewDeckResponse } from \"model\";\nimport { cardsCount } from \"config\";\n\nconst BASE_URL = \"https://deckofcardsapi.com/api/deck\";\nconst NEW_DECK_URL = \"/new/draw/?count=\";\n\nexport class CardsAPI extends HttpClient {\n  public constructor() {\n    super(BASE_URL);\n  }\n\n  fetchNewDeck = (playerCount: number) =>\n    this.instance.get<NewDeckResponse>(`${NEW_DECK_URL}${playerCount * cardsCount}`);\n}\n\nexport const cardsAPI = new CardsAPI();\n","import axios, { AxiosInstance, AxiosResponse } from \"axios\";\n\ndeclare module \"axios\" {\n  interface AxiosResponse<T = any> extends Promise<T> {}\n}\n\nexport abstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  public constructor(baseURL: string) {\n    this.instance = axios.create({\n      baseURL,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError);\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse) => data;\n\n  protected _handleError = (error: any) => Promise.reject(error);\n}\n","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { cardsAPI } from \"services/cards-client\";\nimport { PlayerType, CardDiscard } from \"model\";\nimport { cardValuesLookup, dealCards } from \"config\";\nimport { RootState } from \"app/store\";\n\nexport interface GameState {\n  playerCount: number;\n  players: PlayerType[];\n  discard: CardDiscard[];\n  status: \"idle\" | \"loading\" | \"success\" | \"error\";\n  isGameOver: boolean;\n}\n\nconst initialState: GameState = {\n  playerCount: 0,\n  players: [],\n  discard: [],\n  status: \"idle\",\n  isGameOver: false,\n};\n\nexport const startGame = createAsyncThunk(\"game/start\", async (count: number, { getState }) => {\n  const response = await cardsAPI.fetchNewDeck(count);\n  return { cards: response.cards, count };\n});\n\nexport const gameSlice = createSlice({\n  name: \"game\",\n  initialState,\n  reducers: {\n    setPlayedHand: (state, { payload }: PayloadAction<CardDiscard>) => {\n      if (state.discard.length >= state.playerCount) return;\n\n      const { player, card } = payload;\n\n      state.discard.push({ player, card });\n\n      const id = player.id;\n\n      state.players[id].hand = state.players[id].hand.filter((prevCard) => prevCard.code !== card.code);\n\n      state.players[id].turnToPlay = false;\n\n      if (state.players[id + 1]) {\n        state.players[id + 1].turnToPlay = true;\n      } else {\n        state.players[0].turnToPlay = true;\n      }\n    },\n    setRoundWinner: (state, { payload }: PayloadAction<{ id: number; score: ReturnType<typeof cardValuesLookup> }>) => {\n      const { id, score } = payload;\n      state.players[id].score += score;\n      state.discard = [];\n      state.isGameOver = state.players[0].hand.length === 0;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(startGame.pending, () => {\n      return { ...initialState, status: \"loading\" };\n    });\n    builder.addCase(startGame.fulfilled, (state, { payload }) => {\n      state.playerCount = payload.count;\n      state.players = dealCards(payload.cards, state.playerCount);\n      state.status = \"success\";\n    });\n  },\n});\n\nexport const selectGameState = (state: RootState) => state.game;\n\nexport const { setPlayedHand, setRoundWinner } = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./Player.module.css\";\nimport { Card } from \"components/Card/Card\";\nimport { PlayerType } from \"model\";\nimport { useDispatch } from \"react-redux\";\nimport { setPlayedHand } from \"features/Game/gameSlice\";\n\nexport interface PlayerProps extends PlayerType {\n  isUser: boolean;\n}\n\nexport function Player(player: PlayerProps) {\n  const dispatch = useDispatch();\n  const [pickedCardIndex, setPickedCardIndex] = useState<undefined | number>();\n\n  const { name, hand, score, turnToPlay, isUser } = player;\n\n  useEffect(() => {\n    if (!isUser && turnToPlay) {\n      setPickedCardIndex(Math.floor(Math.random() * hand.length));\n    }\n    if (pickedCardIndex !== undefined) {\n      dispatch(setPlayedHand({ player, card: hand[pickedCardIndex] }));\n      setPickedCardIndex(undefined);\n    }\n  }, [dispatch, hand, isUser, pickedCardIndex, player, turnToPlay]);\n\n  const nameClassName = cn({ \"text-gold\": isUser, \"text-white\": !isUser });\n  const handClassName = cn(styles.hand, { [styles.userHand]: isUser, [styles.npcHand]: !isUser });\n  const cardClassName = cn(styles.card, { [styles.userCard]: isUser, [styles.npcCard]: !isUser });\n\n  return (\n    <article className=\"text-center\">\n      <h2 className={nameClassName}>{name}</h2>\n      <h3 className=\"text-white py-2\">Score: {score}</h3>\n      <section className={handClassName}>\n        {hand.map((card, cardIndex) => (\n          <Card\n            key={card.code}\n            className={cardClassName}\n            cardIndex={cardIndex}\n            disable={!isUser}\n            onCardPick={() => setPickedCardIndex(cardIndex)}\n            {...card}\n          />\n        ))}\n      </section>\n    </article>\n  );\n}\n","import { Container } from \"components/Container/Container\";\nimport React from \"react\";\n\nexport function Loader() {\n  return (\n    <Container tall flex centered>\n      <p className=\"text-white\">Loading...</p>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { determineRoundWinner } from \"config\";\nimport { GameOver } from \"./GameOver\";\nimport { DiscardPile } from \"./DiscardPile\";\nimport { Board } from \"features/Board/Board\";\nimport { Player } from \"features/Player/Player\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { startGame, setRoundWinner, selectGameState } from \"./gameSlice\";\n\ninterface GameProps {\n  playerCount: number;\n  isReloaded: boolean;\n}\n\nexport function Game({ playerCount, isReloaded }: GameProps) {\n  const dispatch = useDispatch();\n  const { players, status, discard, isGameOver } = useSelector(selectGameState);\n\n  useEffect(() => {\n    dispatch(startGame(playerCount));\n  }, [dispatch, playerCount, isReloaded]);\n\n  // Determine round winner\n  useEffect(() => {\n    if (discard.length !== playerCount) return;\n\n    const winner = determineRoundWinner(discard);\n    const timer = setTimeout(() => {\n      dispatch(setRoundWinner({ id: winner.id, score: winner.scoreSum }));\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [discard, playerCount, dispatch]);\n\n  const isLoading = status === \"loading\" || status === \"idle\";\n  const isError = status === \"error\";\n  let content;\n\n  if (isLoading) content = <Loader />;\n  else if (isError) content = <p>Something went wrong...</p>;\n  else {\n    const renderPlayers = players.map((player) => {\n      const isUser = player.id === 0;\n      return <Player key={player.id} isUser={isUser} {...player} />;\n    });\n\n    content = (\n      <Board playerCount={players.length}>\n        {renderPlayers}\n        {isGameOver ? <GameOver players={players} /> : <DiscardPile discard={discard} />}\n      </Board>\n    );\n  }\n\n  return <>{content}</>;\n}\n","import React, { useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { isInPlayerCountRange, MAX_PLAYER_COUNT } from \"config\";\nimport { Game } from \"features/Game/Game\";\nimport { GameLinks } from \"features/Game/StartGameLinks\";\nimport { Container } from \"components/Container/Container\";\n\ninterface ParamTypes {\n  playerCount: string;\n}\n\nexport function GameScreen({ match, location, history }: RouteComponentProps<ParamTypes>) {\n  const playerCount = parseInt(match.params.playerCount);\n  const isReloaded = !!new URLSearchParams(location.search).get(\"reload\");\n\n  const invalidPlayerCount = (\n    <Container width=\"narrow\" tall flex centered direction=\"column\">\n      <GameLinks />\n      <p className=\"text-error\">\n        Looks like you tried to play with\n        {playerCount > MAX_PLAYER_COUNT ? \" more \" : \" less \"}\n        players than allowed.\n      </p>\n    </Container>\n  );\n\n  useEffect(() => {\n    if (isReloaded) {\n      history.replace({\n        search: \"\",\n      });\n    }\n    return () => {};\n  }, [isReloaded, history]);\n\n  return isInPlayerCountRange(playerCount) ? (\n    <Game playerCount={playerCount} isReloaded={isReloaded} />\n  ) : (\n    invalidPlayerCount\n  );\n}\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { LandingScreen } from \"screens/LandingScreen\";\r\nimport { GameScreen } from \"screens/GameScreen\";\r\nimport { Container } from \"components/Container/Container\";\r\nimport { GameLinks } from \"features/Game/StartGameLinks\";\r\n\r\nfunction App() {\r\n  return (\r\n    <main className=\"app\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/game/:playerCount\" component={GameScreen} />\r\n          <Route path=\"/\" component={LandingScreen} exact />\r\n          <Route path=\"*\" component={NotFoundScreen} />\r\n        </Switch>\r\n      </Router>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction NotFoundScreen() {\r\n  return (\r\n    <Container flex tall centered direction=\"column\">\r\n      <p className=\"text-white\">Page not found... Try clicking on one of these instead</p>\r\n      <GameLinks />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport gameReducer from \"features/Game/gameSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app/App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}